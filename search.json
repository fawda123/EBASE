[{"path":[]},{"path":"https://fawda123.github.io/EBASE/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://fawda123.github.io/EBASE/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://fawda123.github.io/EBASE/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://fawda123.github.io/EBASE/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://fawda123.github.io/EBASE/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement mbeck@tbep.org. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://fawda123.github.io/EBASE/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://fawda123.github.io/EBASE/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://fawda123.github.io/EBASE/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://fawda123.github.io/EBASE/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://fawda123.github.io/EBASE/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://fawda123.github.io/EBASE/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://fawda123.github.io/EBASE/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to EBASE","title":"Contributing to EBASE","text":"outlines propose change EBASE. detailed info contributing , please see development contributing guide.","code":""},{"path":"https://fawda123.github.io/EBASE/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to EBASE","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"https://fawda123.github.io/EBASE/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Contributing to EBASE","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://fawda123.github.io/EBASE/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"Contributing to EBASE","text":"recommend create Git branch pull request (PR). Look Travis AppVeyor build status making changes. README contain badges continuous integration services used package. New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://fawda123.github.io/EBASE/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to EBASE","text":"Please note EBASE project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://fawda123.github.io/EBASE/CONTRIBUTING.html","id":"see-tidyverse-development-contributing-guide","dir":"","previous_headings":"","what":"See tidyverse development contributing guide","title":"Contributing to EBASE","text":"details.","code":""},{"path":[]},{"path":"https://fawda123.github.io/EBASE/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"https://fawda123.github.io/EBASE/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"https://fawda123.github.io/EBASE/articles/EBASE.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"EBASE overview","text":"vignette provides overview theory use Estuarine BAyesian Single-station Estimation (EBASE) R package ecosystem metabolism. Use following install package R-Universe. JAGS software must also installed use package. Follow instructions link download install JAGS version appropriate operating system. Load package installation use functions.","code":"# Install EBASE in R: install.packages('EBASE', repos = c('https://fawda123.r-universe.dev', 'https://cloud.r-project.org')) library(EBASE)"},{"path":"https://fawda123.github.io/EBASE/articles/EBASE.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"EBASE overview","text":"example file called exdat() included package demonstrates required time series format use functions. includes nearly year continuously monitored water quality meteorological data Apalachicola National Estuarine Research Reserve. required data include date time vector (DateTimeStamp), dissolved oxygen (mg/L, DO_obs) , water temperature (C, Temp), salinity (psu, Sal), PAR (W/m2/s, PAR), wind speed (m/s, WSpd). time step consistent throughout dataset indicated argument ebase() function (see ). exdat() dataset can viewed time package loaded used examples help files: core function estimate metabolism ebase(). metabolic estimates based mass balance equation Grace et al. (2015) gas exchange estimate Wanninkhof (2014). similar provided BASEmetab R package https://github.com/dgiling/BASEmetab, modifications estimate different parameters optimized JAGS model: \\[ H\\frac{dC}{dt} = aPAR - r - \\left[bU_{10}^2\\left(\\frac{Sc}{600} \\right)^{-0.5} \\left(C_{Sat} - C \\right )\\right] \\] metabolic estimates defined change dissolved oxygen time step \\(\\frac{dC}{dt}\\), gross production provided \\(aPAR\\), respiration provided \\(r\\), gas exchange provided remainder. Required inputs equation dissolved oxygen concentration \\(C\\), solar radiation \\(PAR\\), water column depth \\(H\\) (meters), wind speed \\(U\\). inputs schmidt number \\(Sc\\) dissolved oxygen saturation \\(C_{Sat}\\) calculated observed data package. remaining three parameters \\(\\), \\(r\\), \\(b\\) estimated likelihood given observed data JAGS model using prior distributions shown model file. time step, change oxygen concentration time steps calculated equation using model inputs parameter guesses, finite difference approximation used estimate modeled oxygen concentration. first modeled value starts mean oxygen concentration measurements optimization period. estimated concentration also returned time step, can compared observed one measure model performance. following shows use ebase() function subset four days exdat() example dataset. Running model entire year take minutes, subset used: Also note “dangling” observations start end time series include entire day removed input data prior estimating metabolism. warning returned observations found removed. results returned data frame instantaneous metabolic estimates areal gross production (O2 mmol/m2/d, P \\(aPAR\\) volumetric), respiration (O2 mmol/m2/d, R \\(r\\) volumetric), gas exchange (O2 mmol/m2/d, D remainder equation volumetric). Additional parameters estimated model returned include b shown equation. parameter constant represents primary production per quantum light units (mmol/m3/d)/(W/m2) used estimate gross production (Grace et al. 2015). b parameter constant used estimate gas exchange (cm/hr)/(m2/s2) (provided 0.251 eqn. 4 Wanninkhof (2014)). plot results can made ebase_plot().  daily averages can also plotted using instantaneous = FALSE.  Execution time model can also reduced using multiple processors. done using doParrallel package registering parallel backend . Model fit can assessed using converge rsq columns returned results. values columns apply group grp column specified ndays argument. converge column indicates \"Check convergence\" \"Fine\" JAGS estimate converged iteration (repeated across rows group). n.chains argument can increased convergence achieved. Similarly, rsq column shows r-squared values linear fit modeled observed dissolved oxygen (repeated across rows group). model fit can also assessed comparing observed modeled values dissolved oxygen fit_plot() function. Estimated values shown line observed values shown points.  comparison can also separated group bygroup = TRUE based value ndays argument passed ebase(). r-squared value fit modeled observed dissolved oxygen also shown facet label group.  scatterplot showing modeled versus observed dissolved oxygen can also returned setting scatter = TRUE.  prior distributions \\(\\), \\(r\\), \\(b\\) parameters defined model file included package normal Gaussian distributions mean standard deviations provided aprior, rprior, bprior arguments ebase(). location model file can viewed follows. default values priors chosen based ability EBASE reproduce known parameters forward metabolism model. additional constraint prior distributions truncated positive values required core metabolism equation . upper limit \\(b\\) also set twice default value mean bprior argument. Units parameter (mmol/m3/d)/(W/m2) \\(\\), mmol/m3/d \\(r\\), (cm/hr)/(m2/s2) \\(b\\). prior distributions can viewed prior_plot() function. changes needed default arguments function default arguments used ebase().  95% credible intervals , r (R volumetric), b also returned output ebase() corresponding columns alo, ahi, blo, bhi, Rlo, Rhi, 2.5th 97.5th percentile estimates parameter, respectively. values indicate interval within 95% probability true parameter range representation posterior distributions parameter. Note values parameters repeated across rows, although one estimate returned based number days defined ndays. credible intervals can plotted credible_plot() function.  credible intervals can also retrieved data frame using credible_prep(). function provided convenience parse results ebase().","code":"head(exdat) #>         DateTimeStamp DO_obs Temp  Sal PAR WSpd #> 1 2012-02-23 00:00:00    8.8 16.4 23.0   0  3.6 #> 2 2012-02-23 00:15:00    8.8 16.4 22.8   0  3.5 #> 3 2012-02-23 00:30:00    8.8 16.4 22.7   0  3.6 #> 4 2012-02-23 00:45:00    8.8 16.4 22.9   0  4.2 #> 5 2012-02-23 01:00:00    8.7 16.4 22.7   0  3.6 #> 6 2012-02-23 01:15:00    8.5 16.4 23.4   0  4.1 library(dplyr) library(lubridate)  # subset four days in June dat <- exdat %>%   filter(month(exdat$DateTimeStamp) == 6 & day(exdat$DateTimeStamp) %in% 1:4)  head(dat) #>         DateTimeStamp DO_obs Temp  Sal PAR WSpd #> 1 2012-06-01 00:00:00    4.5 29.5 23.0   0  2.0 #> 2 2012-06-01 00:15:00    5.1 29.5 23.3   0  2.3 #> 3 2012-06-01 00:30:00    4.8 29.5 23.4   0  2.1 #> 4 2012-06-01 00:45:00    4.8 29.5 23.3   0  2.0 #> 5 2012-06-01 01:00:00    4.8 29.5 23.1   0  1.7 #> 6 2012-06-01 01:15:00    5.0 29.5 24.0   0  1.8 res <- ebase(dat, interval = 900, H = 1.85, progress = TRUE, n.chains = 2) head(res) #>         DateTimeStamp       Date grp    H  DO_obs   DO_mod DO_modlo DO_modhi #> 1 2012-06-01 00:00:00 2012-06-01   1 1.85 140.625 166.1133 166.1114 166.1152 #> 2 2012-06-01 00:15:00 2012-06-01   1 1.85 159.375 165.5995 165.3641 165.8286 #> 3 2012-06-01 00:30:00 2012-06-01   1 1.85 150.000 165.0631 164.5970 165.5170 #> 4 2012-06-01 00:45:00 2012-06-01   1 1.85 150.000 164.5412 163.8420 165.2245 #> 5 2012-06-01 01:00:00 2012-06-01   1 1.85 150.000 164.0254 163.0942 164.9398 #> 6 2012-06-01 01:15:00 2012-06-01   1 1.85 156.250 163.5284 162.3571 164.6712 #>         dDO converge       rsq         a     alo       ahi         b        blo #> 1        NA     Fine 0.3054463        NA      NA        NA        NA         NA #> 2 -49.33113     Fine 0.3054463 0.2030573 0.13793 0.2708114 0.2219162 0.05157497 #> 3 -51.49118     Fine 0.3054463 0.2030573 0.13793 0.2708114 0.2219162 0.05157497 #> 4 -50.10174     Fine 0.3054463 0.2030573 0.13793 0.2708114 0.2219162 0.05157497 #> 5 -49.51312     Fine 0.3054463 0.2030573 0.13793 0.2708114 0.2219162 0.05157497 #> 6 -47.71175     Fine 0.3054463 0.2030573 0.13793 0.2708114 0.2219162 0.05157497 #>         bhi  P Plo Phi        R      Rlo      Rhi        D      Dlo      Dhi #> 1        NA NA  NA  NA       NA       NA       NA       NA       NA       NA #> 2 0.4075872  0   0   0 79.03599 35.74868 123.2621 12.22660 2.841483 22.45627 #> 3 0.4075872  0   0   0 79.03599 35.74868 123.2621 16.22270 3.782133 29.70522 #> 4 0.4075872  0   0   0 79.03599 35.74868 123.2621 13.65224 3.191761 24.97945 #> 5 0.4075872  0   0   0 79.03599 35.74868 123.2621 12.56328 2.947694 22.98641 #> 6 0.4075872  0   0   0 79.03599 35.74868 123.2621  9.23075 2.169783 16.88712 ebase_plot(res) ebase_plot(res, instantaneous = FALSE) # setup parallel backend library(doParallel) cl <- makeCluster(2) registerDoParallel(cl)  res <- ebase(dat, interval = 900, H = 1.85, progress = TRUE, n.chains = 2)  stopCluster(cl) fit_plot(res) fit_plot(res, bygroup = TRUE) fit_plot(res, bygroup = TRUE, scatter = TRUE) system.file('ebase_model.txt', package = 'EBASE') prior_plot() credible_plot(res) credible_prep(res) #> # A tibble: 12 × 6 #> # Groups:   grp [4] #>    Date         grp var     mean      lo      hi #>    <date>     <dbl> <fct>  <dbl>   <dbl>   <dbl> #>  1 2012-06-01     1 a      0.203  0.138    0.271 #>  2 2012-06-01     1 r     79.0   35.7    123.    #>  3 2012-06-01     1 b      0.222  0.0516   0.408 #>  4 2012-06-02     2 a      0.198  0.151    0.242 #>  5 2012-06-02     2 r     92.9   51.7    131.    #>  6 2012-06-02     2 b      0.229  0.0589   0.408 #>  7 2012-06-03     3 a      0.182  0.136    0.227 #>  8 2012-06-03     3 r     94.2   62.5    124.    #>  9 2012-06-03     3 b      0.159  0.0167   0.329 #> 10 2012-06-04     4 a      0.226  0.181    0.270 #> 11 2012-06-04     4 r     84.8   56.4    113.    #> 12 2012-06-04     4 b      0.211  0.0456   0.392"},{"path":[]},{"path":"https://fawda123.github.io/EBASE/articles/EBASE.html","id":"equation-optimization-length","dir":"Articles","previous_headings":"Changing the default arguments","what":"Equation optimization length","title":"EBASE overview","text":"ndays argument ebase() defines model optimization period number days used optimizing mass balance equation. default, done day, .e., ndays = 1 loop used applies model equation observations within day, evaluated iteratively first observation day last. Individual parameter estimates , r, b returned day. However, days can used estimate unknown parameters, loop can evaluated every ndays specified argument. ndays argument separate input data groups consecutive days, group total number days equal ndays. final block may include complete number days specified ndays number unique dates input data includes remainder divided ndays, e.g., seven days input data ndays = 5, two groups first five days second two days. output data ebase includes column specifies grouping used based ndays. , number days used optimize equation set days input data. resulting plot:  fit observed modeled dissolved oxygen (note unbroken line days estimated together):","code":"cl <- makeCluster(2) registerDoParallel(cl)  res <- ebase(dat, interval = 900, H = 1.85, progress = TRUE, n.chains = 2, ndays = 4)  stopCluster(cl) ebase_plot(res, instantaneous = TRUE) fit_plot(res)"},{"path":"https://fawda123.github.io/EBASE/articles/EBASE.html","id":"starting-value","dir":"Articles","previous_headings":"Changing the default arguments","what":"Starting value","title":"EBASE overview","text":"doave argument can used define dissolved oxygen value used starting point Bayesian estimation optimization period. default setting (doave = TRUE) use average dissolved oxygen values optimization period defined ndays. example, average dissolved oxygen values 24 hour period used doave = TRUE ndays = 1. first dissolved oxygen observation time series optimization period used starting point doave = F. case, simulated dissolved oxygen time series always start first observed dissolved oxygen value optimization period. default setting uses average observed dissolved oxygen optimization period starting value. , doave = FALSE used set first observed dissolved oxygen starting value.","code":"cl <- makeCluster(2) registerDoParallel(cl)  res <- ebase(dat, interval = 900, H = 1.85, progress = TRUE, n.chains = 2, ndays = 1, doave = F)  stopCluster(cl) fit_plot(res)"},{"path":"https://fawda123.github.io/EBASE/articles/EBASE.html","id":"missing-values","dir":"Articles","previous_headings":"Changing the default arguments","what":"Missing values","title":"EBASE overview","text":"Missing values input data specified time step interval argument ebase() must interpolated prior estimating metabolism. responsibility user verify interpolated values wildly inaccurate. Missing values linearly interpolated non-missing values time step specified value interval. works well small gaps, can easily create inaccurate values gaps larger hours. example, dat object subset 90% observations. ebase_prep() function used internally ebase prepare data metabolism calculations. function interpolates missing data returns column isinterp specifies TRUE FALSE value interpolated. interpolated values can visually inspected using interp_plot() function.  ebase() function includes maxinterp argument assign NA values continuously interpolated rows length greater value defined maxinterp. value set 12 hours default applies groupings defined ndays, .e., group continuous set interpolated values time greater 12 hours assigned NA (except Date DateTimeStamp). numeric value passed maxinterp number time steps input data, e.g., 48 12 hours time step 900 seconds.","code":"set.seed(222) dat2 <- dat %>%    slice_sample(prop = 0.9) %>%    arrange(DateTimeStamp) head(dat2) #>         DateTimeStamp DO_obs Temp  Sal PAR WSpd #> 1 2012-06-01 00:00:00    4.5 29.5 23.0   0  2.0 #> 2 2012-06-01 00:30:00    4.8 29.5 23.4   0  2.1 #> 3 2012-06-01 01:00:00    4.8 29.5 23.1   0  1.7 #> 4 2012-06-01 01:30:00    5.4 29.6 24.9   0  1.8 #> 5 2012-06-01 01:45:00    5.4 29.6 24.6   0  1.8 #> 6 2012-06-01 02:00:00    5.3 29.6 24.8   0  2.0 dat2interp <- ebase_prep(dat2, H = 1.85, interval = 900) head(dat2interp) #>         Date       DateTimeStamp isinterp  DO_obs   DO_sat    H Temp  Sal PAR #> 1 2012-06-02 2012-06-02 00:00:00    FALSE 175.000 213.4922 1.85 28.8 21.8   0 #> 2 2012-06-02 2012-06-02 00:15:00    FALSE 178.125 212.6648 1.85 28.8 22.5   0 #> 3 2012-06-02 2012-06-02 00:30:00    FALSE 175.000 211.7234 1.85 28.9 23.0   0 #> 4 2012-06-02 2012-06-02 00:45:00    FALSE 175.000 212.3111 1.85 28.9 22.5   0 #> 5 2012-06-02 2012-06-02 01:00:00    FALSE 168.750 212.1933 1.85 29.0 22.3   0 #> 6 2012-06-02 2012-06-02 01:15:00    FALSE 162.500 211.7237 1.85 29.0 22.7   0 #>   WSpd       sc grp #> 1  1.9 355.5996   1 #> 2  1.8 356.3840   1 #> 3  1.9 355.2102   1 #> 4  1.9 354.6523   1 #> 5  1.8 352.7068   1 #> 6  1.8 353.1511   1 interp_plot(dat2, H = 1.85, interval = 900, param = 'DO_sat')"},{"path":"https://fawda123.github.io/EBASE/articles/EBASE.html","id":"changing-priors","dir":"Articles","previous_headings":"Changing the default arguments","what":"Changing priors","title":"EBASE overview","text":"default values prior distributions changed ebase(), prior_plot() function can used assess changing characteristics prior distributions influence resulting parameter estimates posterior distributions (e.g., shown credible_plot()). , prior distribution \\(b\\) parameter changed mean 0.4 standard deviation 1.  change prior distribution \\(b\\) parameter applied ebase()  credible_plot() function can used assess changing prior distributions influence posterior distributions parameters.","code":"prior_plot(bprior = c(0.2, 0.1)) cl <- makeCluster(2) registerDoParallel(cl)  res <- ebase(dat, interval = 900, H = 1.85, progress = TRUE, n.chains = 2, bprior = c(0.2, 0.1))  stopCluster(cl)  ebase_plot(res, instantaneous = TRUE) credible_plot(res)"},{"path":[]},{"path":"https://fawda123.github.io/EBASE/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marcus Beck. Author, maintainer. Maria Herrmann. Author. Jill Arriola. Author. Raymond Najjar. Author. Wade McGillis. Author.","code":""},{"path":"https://fawda123.github.io/EBASE/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Beck M, Herrmann M, Arriola J, Najjar R, McGillis W (2023). EBASE: Estuarine Bayesian Single-Station Estimation Method Ecosystem Metabolism. https://fawda123.github.io/EBASE, https://github.com/fawda123/EBASE.","code":"@Manual{,   title = {EBASE: Estuarine Bayesian Single-Station Estimation Method for Ecosystem Metabolism},   author = {Marcus Beck and Maria Herrmann and Jill Arriola and Raymond Najjar and Wade McGillis},   year = {2023},   note = {https://fawda123.github.io/EBASE, https://github.com/fawda123/EBASE}, }"},{"path":"https://fawda123.github.io/EBASE/index.html","id":"ebase","dir":"","previous_headings":"","what":"Estuarine Bayesian Single-Station Estimation Method for Ecosystem Metabolism","title":"Estuarine Bayesian Single-Station Estimation Method for Ecosystem Metabolism","text":"R package Estuarine BAyesian Single-station Estimation (EBASE) method ecosystem metabolism.","code":""},{"path":"https://fawda123.github.io/EBASE/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estuarine Bayesian Single-Station Estimation Method for Ecosystem Metabolism","text":"Install package follows: JAGS software must also installed use package. Follow instructions link download install version appropriate operating system.","code":"# Install EBASE in R: install.packages('EBASE', repos = c('https://fawda123.r-universe.dev', 'https://cloud.r-project.org'))"},{"path":"https://fawda123.github.io/EBASE/index.html","id":"minimal-example","dir":"","previous_headings":"","what":"Minimal example","title":"Estuarine Bayesian Single-Station Estimation Method for Ecosystem Metabolism","text":"","code":"library(dplyr) library(lubridate) library(doParallel)  # get four days of data dat <- exdat %>%   filter(month(exdat$DateTimeStamp) == 6 & day(exdat$DateTimeStamp) %in% 1:4)  ## # run ebase with defaults  # setup parallel backend cl <- makeCluster(2) registerDoParallel(cl)  res <- ebase(dat, interval = 900, H = 1.85, progress = TRUE)  stopCluster(cl)"},{"path":"https://fawda123.github.io/EBASE/reference/credible_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot credible intervals for a, r, and b — credible_plot","title":"Plot credible intervals for a, r, and b — credible_plot","text":"Plot credible intervals , r, b","code":""},{"path":"https://fawda123.github.io/EBASE/reference/credible_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot credible intervals for a, r, and b — credible_plot","text":"","code":"credible_plot(res, params = c(\"a\", \"r\", \"b\"))"},{"path":"https://fawda123.github.io/EBASE/reference/credible_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot credible intervals for a, r, and b — credible_plot","text":"res output data frame ebase params character vector indicating parameters plot, one , r, b,  (default )","code":""},{"path":"https://fawda123.github.io/EBASE/reference/credible_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot credible intervals for a, r, and b — credible_plot","text":"ggplot object","code":""},{"path":"https://fawda123.github.io/EBASE/reference/credible_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot credible intervals for a, r, and b — credible_plot","text":"function plots 95% credible intervals (2.5th 97.5th percentiles, approximate posterior distributions) , r /b using output ebase. Results plot grouped ndays argument used ebase.","code":""},{"path":"https://fawda123.github.io/EBASE/reference/credible_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot credible intervals for a, r, and b — credible_plot","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(lubridate) #>  #> Attaching package: ‘lubridate’ #> The following objects are masked from ‘package:base’: #>  #>     date, intersect, setdiff, union library(doParallel) #> Loading required package: foreach #> Loading required package: iterators #> Loading required package: parallel  # get four days of data dat <- exdat %>%    filter(month(exdat$DateTimeStamp) == 6 & day(exdat$DateTimeStamp) %in% 1:4)  ## # run ebase with defaults, parallel  # setup parallel backend cl <- makeCluster(2) registerDoParallel(cl)  res <- ebase(dat, interval = 900, H = 1.85, progress = TRUE, n.chains = 2)  stopCluster(cl)  # plot credible intervals credible_plot(res)"},{"path":"https://fawda123.github.io/EBASE/reference/credible_prep.html","id":null,"dir":"Reference","previous_headings":"","what":"Get credible intervals for a, r, b — credible_prep","title":"Get credible intervals for a, r, b — credible_prep","text":"Get credible intervals , r, b","code":""},{"path":"https://fawda123.github.io/EBASE/reference/credible_prep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get credible intervals for a, r, b — credible_prep","text":"","code":"credible_prep(res, params = c(\"a\", \"r\", \"b\"), labels = FALSE)"},{"path":"https://fawda123.github.io/EBASE/reference/credible_prep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get credible intervals for a, r, b — credible_prep","text":"res output data frame ebase params character vector indicating parameters plot, one , r, b (default ) labels logical indicating parameter labels output expression parsing plot facets, default FALSE","code":""},{"path":"https://fawda123.github.io/EBASE/reference/credible_prep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get credible intervals for a, r, b — credible_prep","text":"data frame","code":""},{"path":"https://fawda123.github.io/EBASE/reference/credible_prep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get credible intervals for a, r, b — credible_prep","text":"function gets 95% credible intervals (2.5th 97.5th percentiles, approximate posterior distributions) , r, /b using output ebase. function used credible_plot, provided separate function convenience.","code":""},{"path":"https://fawda123.github.io/EBASE/reference/credible_prep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get credible intervals for a, r, b — credible_prep","text":"","code":"library(dplyr) library(lubridate) library(doParallel)  # get four days of data dat <- exdat %>%    filter(month(exdat$DateTimeStamp) == 6 & day(exdat$DateTimeStamp) %in% 1:4)  ## # run ebase with defaults, parallel  # setup parallel backend cl <- makeCluster(2) registerDoParallel(cl)  res <- ebase(dat, interval = 900, H = 1.85, progress = TRUE, n.chains = 2)  stopCluster(cl)  # get credible intervals credible_prep(res) #> # A tibble: 12 × 6 #> # Groups:   grp [4] #>    Date         grp var     mean      lo      hi #>    <date>     <dbl> <fct>  <dbl>   <dbl>   <dbl> #>  1 2012-06-01     1 a      0.203  0.138    0.271 #>  2 2012-06-01     1 r     79.0   35.7    123.    #>  3 2012-06-01     1 b      0.222  0.0516   0.408 #>  4 2012-06-02     2 a      0.198  0.151    0.242 #>  5 2012-06-02     2 r     92.9   51.7    131.    #>  6 2012-06-02     2 b      0.229  0.0589   0.408 #>  7 2012-06-03     3 a      0.182  0.136    0.227 #>  8 2012-06-03     3 r     94.2   62.5    124.    #>  9 2012-06-03     3 b      0.159  0.0167   0.329 #> 10 2012-06-04     4 a      0.226  0.181    0.270 #> 11 2012-06-04     4 r     84.8   56.4    113.    #> 12 2012-06-04     4 b      0.211  0.0456   0.392"},{"path":"https://fawda123.github.io/EBASE/reference/ebase.html","id":null,"dir":"Reference","previous_headings":"","what":"Estuarine Bayesian Single-station Estimation method for ecosystem metabolism — ebase","title":"Estuarine Bayesian Single-station Estimation method for ecosystem metabolism — ebase","text":"Estuarine Bayesian Single-station Estimation method ecosystem metabolism","code":""},{"path":"https://fawda123.github.io/EBASE/reference/ebase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estuarine Bayesian Single-station Estimation method for ecosystem metabolism — ebase","text":"","code":"ebase(   dat,   H,   interval,   ndays = 1,   aprior = c(0.2, 1),   rprior = c(20, 50),   bprior = c(0.251, 0.1),   bmax = 0.502,   doave = TRUE,   maxinterp = 43200/interval,   n.iter = 10000,   update.chains = TRUE,   n.burnin = n.iter * 0.5,   n.chains = 3,   n.thin = 10,   progress = FALSE,   model_file = NULL )"},{"path":"https://fawda123.github.io/EBASE/reference/ebase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estuarine Bayesian Single-station Estimation method for ecosystem metabolism — ebase","text":"dat input data frame H numeric single value water column depth (m) vector equal length number rows dat interval timestep interval seconds ndays numeric number days dat optimizing metabolic equation, see details aprior numeric vector length two indicating mean standard deviation prior distribution parameter, see details rprior numeric vector length two indicating mean standard deviation prior distribution r parameter, see details bprior numeric vector length two indicating mean standard deviation prior distribution b parameter, see details bmax numeric value upper limit prior distribution bprior, set twice default value mean doave logical indicating average dissolved oxygen concentration used starting value estimation (default), otherwise first observation used FALSE, see details maxinterp numeric value minimum number continuous observations must interpolated within group defined ndays assign NA output, see details n.iter number MCMC iterations, passed jags update.chains logical run metab_update chains converge n.burnin number MCMC chains delete, passed jags n.chains number MCMC chains run, passed jags n.thin number nth iterations save chain, passed jags progress logical progress saved txt file named 'log.txt' working directory model_file NULL use model file included package path model text file can used","code":""},{"path":"https://fawda123.github.io/EBASE/reference/ebase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estuarine Bayesian Single-station Estimation method for ecosystem metabolism — ebase","text":"data frame metabolic estimates areal gross production (P, O2 mmol/m2/d), respiration (R,  O2 mmol/m2/d; r parameter), gas exchange (D, O2 mmol/m2/d).  Additional parameters estimated model returned include b.  parameter constant represents primary production per quantum light units (mmol/m3/d)/(W/m2) used estimate gross production (Grace et al., 2015).  b parameter constant used estimate gas exchange (cm/hr)/(m2/s2) (provided 0.251 eqn. 4 Wanninkhof 2014).  Observed dissolved oxygen (DO_obs, mmol/m3), modeled dissolved oxygen (DO_mod, mmol/m3), delta dissolved oxygen modeled results (dDO, mmol/m3/d) also returned.  Note delta dissolved oxygen daily rate. 95% credible intervals , b, r also returned corresponding columns alo, ahi, blo, bhi, Rlo, Rhi, 2.5th 97.5th percentile estimates parameter, respectively.  values indicate interval within 95% probability true parameter range. Note values parameters repeated across rows, although one estimate returned based number days defined ndays. Model fit can also assessed using converge rsq columns.  values columns apply group grp column specified ndays argument. converge column indicates \"Check convergence\" \"Fine\" JAGS estimate converged iteration (repeated across rows group).  n.chains argument can increased convergence achieved. Similarly, rsq column shows r-squared values linear fit modeled observed dissolved oxygen (repeated across rows group).  values can also viewed fit_plot.","code":""},{"path":"https://fawda123.github.io/EBASE/reference/ebase.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estuarine Bayesian Single-station Estimation method for ecosystem metabolism — ebase","text":"Required input data time series dissolved oxygen (mg/L), water temperature (C), salinity (psu), total PAR (W/m2/s), wind speed (m/s).  See exdat example data file representation required data.  Data typically continuously monitored water quality weather parameters hourly sub-hourly time steps.  Oxygen concentrations converted mmol/m3 prior metabolic estimation. Water column depth also required.  can supplied single value vector length equal number rows dat. metabolic estimates based mass balance equation Grace et al. 2015 gas exchange estimate Wanninkhof 2004.  similar provided BASEmetab R package https://github.com/dgiling/BASEmetab, modifications estimate different parameters. equation optimized JAGS model : $$ H\\frac{dC}{dt} = aPAR - r - \\left[bU_{10}^2\\left(\\frac{Sc}{600} \\right)^{-0.5} \\left(C_{Sat} - C \\right )\\right]$$ Gross production provided aPAR, respiration provided r, gas exchange provided remainder.  likelihood parameters , r, b given observed data estimated JAGS model using prior distributions shown model file. time step, change oxygen concentration time steps calculated equation using model inputs parameter guesses, finite difference approximation used estimate modeled oxygen concentration.  first modeled value starts mean oxygen concentration measurements optimization period.  estimated concentration time step also returned comparison observed one measure model performance. prior distributions , r, b parameters defined model file included package normal distributions mean standard deviations provided aprior, rprior, bprior arguments. default values chosen based ability EBASE reproduce known parameters forward metabolism model.  additional constraint prior distributions truncated positive values required core metabolism equation . upper limit b set two times 0.251, given eqn. 4 Wanninkhof 2014. Units parameter (mmol/m3/d)/(W/m2) , mmol/m3/d r, (cm/hr)/(m2/s2) b. ndays argument defines model optimization period number days used optimizing mass balance equation.  default, done day, .e., ndays= 1 loop used applies model equation observations within day, evaluated iteratively first observation day last.  Individual parameter estimates , r, b returned day.  However, days can used estimate unknown parameters, loop can evaluated every ndays specified argument.  ndays argument separate input data groups consecutive days, group total number days equal ndays.  final block may include complete number days specified ndays number unique dates input data includes remainder divided ndays, e.g., seven days input data ndays = 5, two groups first five days second two days. output data ebase includes column specifies grouping used based ndays. Missing values input data also interpolated prior estimating metabolism.  responsibility user verify interpolated values wildly inaccurate.  Missing values linearly interpolated non-missing values time step specified value interval.  works well small gaps, can easily create inaccurate values gaps larger hours. interp_plot function can used visually assess interpolated values. Records start end input time series include full day also removed.  warning returned console gaps found dangling records found. maxinterp argument specifies minimum number observations must interpolated within groups defined ndays assigned NA output (except Date DateTimeStamp).  Groups continuous rows interpolated values length longer argument assigned NA.  default value half day, .e., 43200 seconds divided value interval. doave argument can used define dissolved oxygen value used starting point Bayesian estimation optimization period.  default setting (doave = TRUE) use average dissolved oxygen values optimization period defined ndays.  example, average dissolved oxygen values 24 hour period used doave = TRUE ndays = 1.  first dissolved oxygen observation time series optimization period used starting point doave = F.  case, simulated dissolved oxygen time series always start first observed dissolved oxygen value optimization period.","code":""},{"path":"https://fawda123.github.io/EBASE/reference/ebase.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estuarine Bayesian Single-station Estimation method for ecosystem metabolism — ebase","text":"Grace, M.R., Giling, D.P., Hladyz, S., Caron, V., Thompson, R.M., Nally, R.M., 2015. Fast processing diel oxygen curves: Estimating stream metabolism BASE (BAyesian Single-station Estimation). Limnology Oceanography: Methods 13, e10011. https://doi.org/10.1002/lom3.10011 Wanninkhof, R., 2014. Relationship wind speed gas exchange ocean revisited. Limnology Oceanography: Methods 12, 351–362. https://doi.org/10.4319/lom.2014.12.351","code":""},{"path":"https://fawda123.github.io/EBASE/reference/ebase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estuarine Bayesian Single-station Estimation method for ecosystem metabolism — ebase","text":"","code":"library(dplyr) library(lubridate) library(doParallel)  # get four days of data dat <- exdat %>%    filter(month(exdat$DateTimeStamp) == 6 & day(exdat$DateTimeStamp) %in% 1:4)  ## # run ebase with defaults, parallel  # setup parallel backend cl <- makeCluster(2) registerDoParallel(cl)  res <- ebase(dat, interval = 900, H = 1.85, progress = TRUE, n.chains = 2)  stopCluster(cl)  if (FALSE) { ## # run ebase with different prior distributions  # setup parallel backend cl <- makeCluster(2) registerDoParallel(cl)    res <- ebase(dat, interval = 900, H = 1.85, progress = TRUE, n.chains = 2, bprior = c(0.2, 0.05))  stopCluster(cl) }"},{"path":"https://fawda123.github.io/EBASE/reference/ebase_form.html","id":null,"dir":"Reference","previous_headings":"","what":"Format ebase output — ebase_form","title":"Format ebase output — ebase_form","text":"Format ebase output","code":""},{"path":"https://fawda123.github.io/EBASE/reference/ebase_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format ebase output — ebase_form","text":"","code":"ebase_form(out, dat, interval, maxinterp = 43200/interval)"},{"path":"https://fawda123.github.io/EBASE/reference/ebase_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format ebase output — ebase_form","text":"data.frame model output dat data.frame returned ebase_prep interval timestep interval seconds maxinterp numeric value minimum number continuous observations must interpolated within group defined ndays assign NA output","code":""},{"path":"https://fawda123.github.io/EBASE/reference/ebase_form.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format ebase output — ebase_form","text":"Formatted output ebase interpolated rows NA (except Date DateTimeStamp defined maxinterp","code":""},{"path":"https://fawda123.github.io/EBASE/reference/ebase_form.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format ebase output — ebase_form","text":"function used internally ebase called .","code":""},{"path":"https://fawda123.github.io/EBASE/reference/ebase_form.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format ebase output — ebase_form","text":"","code":"library(dplyr) library(lubridate) library(doParallel)  # get four days of data dat <- exdat %>%    filter(month(exdat$DateTimeStamp) == 6 & day(exdat$DateTimeStamp) %in% 1:4)  ## # run ebase with defaults, parallel  if (FALSE) { # setup parallel backend cl <- makeCluster(2) registerDoParallel(cl)  out <- ebase(dat, interval = 900, H = 1.85, progress = TRUE, n.chains = 2)  stopCluster(cl)  dat <- ebase_prep(dat, H = 1.85, interval = 900, ndays = 1)  ebase_form(out, dat, interval = 900, maxinterp = 48)  }"},{"path":"https://fawda123.github.io/EBASE/reference/ebase_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot results from EBASE — ebase_plot","title":"Plot results from EBASE — ebase_plot","text":"Plot results EBASE","code":""},{"path":"https://fawda123.github.io/EBASE/reference/ebase_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot results from EBASE — ebase_plot","text":"","code":"ebase_plot(res, instantaneous = TRUE)"},{"path":"https://fawda123.github.io/EBASE/reference/ebase_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot results from EBASE — ebase_plot","text":"res output data frame ebase instantaneous logical indicating results instantaneous (default) averaged daily","code":""},{"path":"https://fawda123.github.io/EBASE/reference/ebase_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot results from EBASE — ebase_plot","text":"ggplot object","code":""},{"path":"https://fawda123.github.io/EBASE/reference/ebase_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot results from EBASE — ebase_plot","text":"D R plotted negative values express contribution net metabolism.","code":""},{"path":"https://fawda123.github.io/EBASE/reference/ebase_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot results from EBASE — ebase_plot","text":"","code":"library(dplyr) library(lubridate) library(doParallel)  # get four days of data dat <- exdat %>%    filter(month(exdat$DateTimeStamp) == 6 & day(exdat$DateTimeStamp) %in% 1:4)  # run ebase with defaults, parallel  # setup parallel backend cl <- makeCluster(2) registerDoParallel(cl)  res <- ebase(dat, interval = 900, H = 1.85, progress = TRUE, n.chains = 2)  stopCluster(cl)  # plot instantaneous ebase_plot(res)   # plot daily-averaged ebase_plot(res, instantaneous = FALSE)"},{"path":"https://fawda123.github.io/EBASE/reference/ebase_prep.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data for ebase — ebase_prep","title":"Prepare data for ebase — ebase_prep","text":"Prepare data ebase","code":""},{"path":"https://fawda123.github.io/EBASE/reference/ebase_prep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data for ebase — ebase_prep","text":"","code":"ebase_prep(dat, H, interval, ndays = 1)"},{"path":"https://fawda123.github.io/EBASE/reference/ebase_prep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data for ebase — ebase_prep","text":"dat input data frame H numeric single value water column depth (m) vector equal length number rows dat interval timestep interval seconds ndays numeric number days dat optimizing metabolic equation, see details","code":""},{"path":"https://fawda123.github.io/EBASE/reference/ebase_prep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare data for ebase — ebase_prep","text":"data frame additional columns required ebase.  multiple time steps identified, number rows data frame expanded based time step define interval.  Numeric values expanded rows interpolated interp = TRUE, otherwise remain NA values.","code":""},{"path":"https://fawda123.github.io/EBASE/reference/ebase_prep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare data for ebase — ebase_prep","text":"Checks columns present matching exdat, converts dissolved oxygen mg/L mmol/m3, calculates Schmidt number (unitless) water temp (C) salinity (psu), calculates dissolved oxygen equilibrium concentration (mmol/m3) salinity temperature ndays argument defines number days used optimizing mass balance equation.  default, done day, .e., ndays= 1 loop used applies model equation observations within day, evaluated iteratively first observation day last.  Individual parameter estimates , r, b returned day.  However, days can used estimate unknown parameters, loop can evaluated every ndays specified argument.  ndays argument separate input data groups consecutive days, group total number days equal ndays.  final block may include complete number days specified ndays number unique dates input data includes remainder divided ndays, e.g., seven days input data ndays = 5, two groups first five days second two days. output data ebase includes column specifies grouping used based ndays. Missing values interpolated interval specified interval argument conformance core model equation. Records start end input time series include full day also removed.  warning returned console gaps found dangling records found.","code":""},{"path":"https://fawda123.github.io/EBASE/reference/ebase_prep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare data for ebase — ebase_prep","text":"","code":"dat <- ebase_prep(exdat, H = 1.85, interval = 900) #> Warning: More than one time step or missing values will be interpolated head(dat) #>         Date       DateTimeStamp isinterp  DO_obs   DO_sat    H Temp  Sal PAR #> 1 2012-02-23 2012-02-23 00:00:00    FALSE 275.000 265.8630 1.85 16.4 23.0   0 #> 2 2012-02-23 2012-02-23 00:15:00    FALSE 275.000 266.1861 1.85 16.4 22.8   0 #> 3 2012-02-23 2012-02-23 00:30:00    FALSE 275.000 266.3479 1.85 16.4 22.7   0 #> 4 2012-02-23 2012-02-23 00:45:00    FALSE 275.000 266.0245 1.85 16.4 22.9   0 #> 5 2012-02-23 2012-02-23 01:00:00    FALSE 271.875 266.3479 1.85 16.4 22.7   0 #> 6 2012-02-23 2012-02-23 01:15:00    FALSE 265.625 265.2179 1.85 16.4 23.4   0 #>   WSpd       sc grp #> 1  3.6 660.2062   1 #> 2  3.5 659.8137   1 #> 3  3.6 659.6174   1 #> 4  4.2 660.0099   1 #> 5  3.6 659.6174   1 #> 6  4.1 660.9913   1"},{"path":"https://fawda123.github.io/EBASE/reference/exdat.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample data from Apalachicola NERRS — exdat","title":"Sample data from Apalachicola NERRS — exdat","text":"Sample data Apalachicola NERRS","code":""},{"path":"https://fawda123.github.io/EBASE/reference/exdat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample data from Apalachicola NERRS — exdat","text":"","code":"exdat"},{"path":"https://fawda123.github.io/EBASE/reference/exdat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample data from Apalachicola NERRS — exdat","text":"data.frame object 27648 rows 6 columns DateTimeStamp date time, America/Jamaica time zone, 15 minute time step DO_obs dissolved oxygen, mg/L Temp water temperature, C Sal salinity, psu PAR total PAR, W/m2/s WSpd num, m/s","code":""},{"path":"https://fawda123.github.io/EBASE/reference/exdat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample data from Apalachicola NERRS — exdat","text":"","code":"if (FALSE) { library(dplyr) library(tidyr)  exdat <- read.csv('inst/APNERR2012.csv') %>%    rename(     PAR = I,     Sal = salinity,     Temp = tempC,      DO_obs = DO.meas   ) %>%    unite('DateTimeStamp', Date, Time, sep = ' ') %>%    mutate(     DateTimeStamp = lubridate::mdy_hm(DateTimeStamp, tz = 'America/Jamaica')   ) %>%    select(DateTimeStamp, DO_obs, Temp, Sal, PAR, WSpd)   save(exdat, file = 'data/exdat.RData', compress = 'xz') }"},{"path":"https://fawda123.github.io/EBASE/reference/fit_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot observed and modeled dissolved oxygen — fit_plot","title":"Plot observed and modeled dissolved oxygen — fit_plot","text":"Plot observed modeled dissolved oxygen","code":""},{"path":"https://fawda123.github.io/EBASE/reference/fit_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot observed and modeled dissolved oxygen — fit_plot","text":"","code":"fit_plot(res, bygroup = FALSE, scatter = FALSE, showfit = TRUE)"},{"path":"https://fawda123.github.io/EBASE/reference/fit_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot observed and modeled dissolved oxygen — fit_plot","text":"res output data frame ebase bygroup logical indicating plot faceted group scatter logical indicating scatter plot modeled versus estimated dissolved oxygen returned showfit logical indicating linear fit shown plot, applies scatter = TRUE","code":""},{"path":"https://fawda123.github.io/EBASE/reference/fit_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot observed and modeled dissolved oxygen — fit_plot","text":"ggplot object","code":""},{"path":"https://fawda123.github.io/EBASE/reference/fit_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot observed and modeled dissolved oxygen — fit_plot","text":"Dissolved oxygen (mmol/m3) plotted observed input data (points) modeled (lines) based inputs ebase scatter = FALSE.  scatter plot modeled versus estimated dissolved oxygen returned scatter = TRUE, including linear fit showfit = TRUE.  plot faceted group based ndays argument ebase bygroup = TRUE.  r-squared value fit modeled observed dissolved oxygen also shown facet label group bygroup = TRUE.","code":""},{"path":"https://fawda123.github.io/EBASE/reference/fit_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot observed and modeled dissolved oxygen — fit_plot","text":"","code":"library(dplyr) library(lubridate) library(doParallel)  # get four days of data dat <- exdat %>%    filter(month(exdat$DateTimeStamp) == 6 & day(exdat$DateTimeStamp) %in% 1:4)  ## # run ebase with defaults, parallel  # setup parallel backend cl <- makeCluster(2) registerDoParallel(cl)  res <- ebase(dat, interval = 900, H = 1.85, progress = TRUE, n.chains = 2)  stopCluster(cl)  # plot observed and modeled DO fit_plot(res)   # plot observed and modeled DO by group fit_plot(res, bygroup = TRUE)   # as scatter plot fit_plot(res, scatter = TRUE)   # as scatter plot by group fit_plot(res, scatter = TRUE, bygroup = TRUE)"},{"path":"https://fawda123.github.io/EBASE/reference/interp_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a diagnostic plot showing interpolated values prior to metabolism estimates — interp_plot","title":"Create a diagnostic plot showing interpolated values prior to metabolism estimates — interp_plot","text":"Create diagnostic plot showing interpolated values prior metabolism estimates","code":""},{"path":"https://fawda123.github.io/EBASE/reference/interp_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a diagnostic plot showing interpolated values prior to metabolism estimates — interp_plot","text":"","code":"interp_plot(   dat,   param = c(\"DO_obs\", \"DO_sat\", \"H\", \"Temp\", \"Sal\", \"PAR\", \"WSpd\", \"sc\"),   H,   interval,   ndays = 1 )"},{"path":"https://fawda123.github.io/EBASE/reference/interp_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a diagnostic plot showing interpolated values prior to metabolism estimates — interp_plot","text":"dat input data frame param character string parameter plot, one DO_obs, DO_sat, H, Temp, Sal, PAR, WSpd, sc H numeric single value water column depth (m) vector equal length number rows dat interval timestep interval seconds ndays numeric number days dat optimizing metabolic equation, see details","code":""},{"path":"https://fawda123.github.io/EBASE/reference/interp_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a diagnostic plot showing interpolated values prior to metabolism estimates — interp_plot","text":"ggplot object","code":""},{"path":"https://fawda123.github.io/EBASE/reference/interp_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a diagnostic plot showing interpolated values prior to metabolism estimates — interp_plot","text":"Missing values input data can also interpolated prior estimating metabolism.  default behavior responsibility user verify interpolated values wildly inaccurate.  Missing values linearly interpolated non-missing values time step specified value interval.  works well small gaps, can easily create inaccurate values gaps larger hours. plot function can used visually assess interpolated gaps.","code":""},{"path":"https://fawda123.github.io/EBASE/reference/interp_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a diagnostic plot showing interpolated values prior to metabolism estimates — interp_plot","text":"","code":"library(dplyr) library(lubridate)  # get four days of data dat <- exdat %>%    filter(month(exdat$DateTimeStamp) == 6 & day(exdat$DateTimeStamp) %in% 1:4)    # create missing values set.seed(222) dat <- dat %>%    slice_sample(prop = 0.9) %>%    arrange(DateTimeStamp)  interp_plot(dat, H = 1.85, interval = 900, param = 'DO_sat') #> Warning: Incomplete daily observations removed at start of dat #> Warning: Incomplete daily observations removed at end of dat #> Warning: More than one time step or missing values will be interpolated"},{"path":"https://fawda123.github.io/EBASE/reference/metab_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Update metabolism jags fit — metab_update","title":"Update metabolism jags fit — metab_update","text":"Update metabolism jags fit","code":""},{"path":"https://fawda123.github.io/EBASE/reference/metab_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update metabolism jags fit — metab_update","text":"","code":"metab_update(metabfit, update.chains, n.iter)"},{"path":"https://fawda123.github.io/EBASE/reference/metab_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update metabolism jags fit — metab_update","text":"metabfit initial jags metabolism output update.chains logical update, TRUE n.iter number iterations","code":""},{"path":"https://fawda123.github.io/EBASE/reference/metab_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update metabolism jags fit — metab_update","text":"Updated jags metabolism output","code":""},{"path":"https://fawda123.github.io/EBASE/reference/metab_update.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update metabolism jags fit — metab_update","text":"function used ebase called directly user.  provides additional model iterations convergence achieved.","code":""},{"path":"https://fawda123.github.io/EBASE/reference/prior_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot prior distributions for a, r, and b — prior_plot","title":"Plot prior distributions for a, r, and b — prior_plot","text":"Plot prior distributions , r, b","code":""},{"path":"https://fawda123.github.io/EBASE/reference/prior_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot prior distributions for a, r, and b — prior_plot","text":"","code":"prior_plot(   aprior = c(0.2, 1),   rprior = c(20, 50),   bprior = c(0.251, 0.1),   bmax = 0.502,   n = 1000 )"},{"path":"https://fawda123.github.io/EBASE/reference/prior_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot prior distributions for a, r, and b — prior_plot","text":"aprior numeric vector length two indicating mean standard deviation prior distribution parameter, see details rprior numeric vector length two indicating mean standard deviation prior distribution r parameter, see details bprior numeric vector length two indicating mean standard deviation prior distribution b parameter, see details bmax numeric value upper limit prior distribution bprior, set twice default value mean n numeric indicating number random samples draw prior distributions","code":""},{"path":"https://fawda123.github.io/EBASE/reference/prior_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot prior distributions for a, r, and b — prior_plot","text":"ggplot object","code":""},{"path":"https://fawda123.github.io/EBASE/reference/prior_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot prior distributions for a, r, and b — prior_plot","text":"function produces plot prior distributions used ebase , r, b parameters optimization equation estimating metabolism.  ebase function uses default values arguments aprior, rprior, bprior required function.  default values changed ebase, function can used assess changing characteristics prior distributions influence resulting parameter estimates posterior distributions (e.g., shown credible_plot. parameters follow normal Gaussian distribution priors means standard deviations defined arguments. distributions truncated include values greater zero required core metabolism equation. upper limit b also set twice default value mean bprior argument. Truncated normal distributions obtained using rtruncnorm function number random samples defined n argument.","code":""},{"path":"https://fawda123.github.io/EBASE/reference/prior_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot prior distributions for a, r, and b — prior_plot","text":"","code":"# default plot prior_plot()   # changing the mean and standard deviation for the b parameter prior_plot(bprior = c(0.2, 0.05))"}]
